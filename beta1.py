#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Feb 15, 2024 03:41:47 AM +07  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import beta1_support

_bgcolor = "SystemButtonFace"
_fgcolor = "SystemWindowText"
_tabfg1 = "black"
_tabfg2 = "white"
_bgmode = "light"
_tabbg1 = "#d9d9d9"
_tabbg2 = "gray40"

_style_code_ran = 0


def _style_code():
    global _style_code_ran
    if _style_code_ran:
        return
    try:
        beta1_support.root.tk.call(
            "source", os.path.join(_location, "themes", "xpnative.tcl")
        )
    except:
        pass
    style = ttk.Style()
    style.theme_use("xpnative")
    style.configure(".", font="TkDefaultFont")
    _style_code_ran = 1

class HSI:

    def __init__(self, top=None):
        """This class configures and populates the toplevel window.
        top is the toplevel containing window."""

        top.geometry("1000x500+174+90")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("Toplevel 0")
        top.configure(highlightcolor="SystemWindowText")

        self.top = top
        self.tch103 = tk.IntVar()

        _style_code()
        self.TSizegrip1 = ttk.Sizegrip(self.top)
        self.TSizegrip1.place(anchor="se", relx=1.0, rely=1.0)

        self.TFrame1 = ttk.Frame(self.top)
        self.TFrame1.place(relx=0.01, rely=0.02, relheight=0.95, relwidth=0.745)
        self.TFrame1.configure(relief="groove")
        self.TFrame1.configure(borderwidth="2")
        self.TFrame1.configure(relief="groove")

        self.Menu = ttk.Frame(self.top)
        self.Menu.place(relx=0.76, rely=0.02, relheight=0.95, relwidth=0.235)
        self.Menu.configure(relief="flat")
        self.Menu.configure(borderwidth="2")
        self.Menu.configure(relief="flat")

        self.Open = ttk.Button(self.Menu)
        self.Open.place(relx=0.043, rely=0.021, height=25, width=76)
        self.Open.configure(text="""Open""")
        self.Open.configure(compound="left")
        self.Open.configure(command=beta1_support.image.import_img)

        self.filedir = ttk.Label(self.Menu)
        self.filedir.place(relx=0.374, rely=0.015, height=19, width=135)
        self.filedir.configure(font="-family {Segoe UI} -size 9")
        self.filedir.configure(relief="flat")
        self.filedir.configure(anchor="w")
        self.filedir.configure(justify="left")
        self.filedir.configure(text="""File directory""")
        self.filedir.configure(compound="left")

        self.loadstatus = ttk.Label(self.Menu)
        self.loadstatus.place(relx=0.638, rely=0.947, height=19, width=75)
        self.loadstatus.configure(font="-family {Segoe UI} -size 9")
        self.loadstatus.configure(relief="flat")
        self.loadstatus.configure(anchor="w")
        self.loadstatus.configure(justify="left")
        self.loadstatus.configure(text="""Load status""")
        self.loadstatus.configure(compound="left")

        self.HUE2pre = ttk.Frame(self.Menu)
        self.HUE2pre.place(relx=0.511, rely=0.589, relheight=0.347, relwidth=0.447)
        self.HUE2pre.configure(relief="groove")
        self.HUE2pre.configure(borderwidth="2")
        self.HUE2pre.configure(relief="groove")

        self.HUE1pre = ttk.Frame(self.Menu)
        self.HUE1pre.place(relx=0.043, rely=0.589, relheight=0.347, relwidth=0.447)
        self.HUE1pre.configure(relief="groove")
        self.HUE1pre.configure(borderwidth="2")
        self.HUE1pre.configure(relief="groove")

        self.loadbar = ttk.Progressbar(self.Menu)
        self.loadbar.place(
            relx=0.043, rely=0.947, relwidth=0.511, relheight=0.0, height=18
        )
        self.loadbar.configure(length="120")

        self.HSIframe = ttk.Labelframe(self.Menu)
        self.HSIframe.place(relx=0.043, rely=0.084, relheight=0.495, relwidth=0.894)
        self.HSIframe.configure(relief="flat")
        self.HSIframe.configure(borderwidth="2")
        self.HSIframe.configure(relief="flat")

        self.HUEed = ttk.Labelframe(self.HSIframe)
        self.HUEed.place(
            relx=0.048, rely=0.34, relheight=0.191, relwidth=0.905, bordermode="ignore"
        )
        self.HUEed.configure(relief="")
        self.HUEed.configure(text="""HUE end""")

        self.HUEedState = ttk.Checkbutton(self.HUEed)
        self.HUEedState.place(
            relx=0.047,
            rely=0.444,
            relwidth=0.095,
            relheight=0.0,
            height=21,
            bordermode="ignore",
        )
        self.HUEedState.configure(variable=self.tch103)
        self.HUEedState.configure(compound="left")

        self.HUEedLen = ttk.Scale(self.HUEed, from_=0, to=360.0)
        self.HUEedLen.place(relx=0.158, rely=0.311, relheight=0.533, relwidth=0.526)
        self.HUEedLen.configure(command=beta1_support.ed_lentoval)

        self.HUEedVal = ttk.Entry(self.HUEed)
        self.HUEedVal.place(
            relx=0.737, rely=0.333, relheight=0.511, relwidth=0.189, bordermode="ignore"
        )
        self.HUEedVal.configure(font="-family {Segoe UI} -size 9")
        self.HUEedVal.configure(cursor="ibeam")

        self.HUEst = ttk.Labelframe(self.HSIframe)
        self.HUEst.place(
            relx=0.048, rely=0.128, relheight=0.191, relwidth=0.905, bordermode="ignore"
        )
        self.HUEst.configure(relief="flat")
        self.HUEst.configure(text="""HUE start""")

        self.HUEstLen = ttk.Scale(self.HUEst, from_=0, to=360.0)
        self.HUEstLen.place(relx=0.158, rely=0.333, relheight=0.533, relwidth=0.526)
        self.HUEstLen.configure(command=beta1_support.st_lentoval)

        self.HUEstVal = ttk.Entry(self.HUEst)
        self.HUEstVal.place(
            relx=0.737, rely=0.333, relheight=0.511, relwidth=0.189, bordermode="ignore"
        )
        self.HUEstVal.configure(font="-family {Segoe UI} -size 9")
        self.HUEstVal.configure(cursor="ibeam")

        self.sat = ttk.Labelframe(self.HSIframe)
        self.sat.place(
            relx=0.048, rely=0.766, relheight=0.191, relwidth=0.905, bordermode="ignore"
        )
        self.sat.configure(relief="")
        self.sat.configure(text="""Satuation""")

        self.satState = ttk.Checkbutton(self.sat)
        self.satState.place(
            relx=0.047,
            rely=0.444,
            relwidth=0.095,
            relheight=0.0,
            height=21,
            bordermode="ignore",
        )
        self.satState.configure(variable=self.tch103)
        self.satState.configure(compound="left")

        self.satLen = ttk.Scale(self.sat, from_=0, to=1.0)
        self.satLen.place(relx=0.158, rely=0.333, relheight=0.533, relwidth=0.526)

        self.satLen.configure(command=beta1_support.sat_lentoval)

        self.satVal = ttk.Entry(self.sat)
        self.satVal.place(
            relx=0.737, rely=0.333, relheight=0.511, relwidth=0.189, bordermode="ignore"
        )
        self.satVal.configure(font="-family {Segoe UI} -size 9")
        self.satVal.configure(cursor="ibeam")

        self.inten = ttk.Labelframe(self.HSIframe)
        self.inten.place(
            relx=0.048, rely=0.553, relheight=0.191, relwidth=0.905, bordermode="ignore"
        )
        self.inten.configure(relief="")
        self.inten.configure(text="""Intensity""")

        self.intenState = ttk.Checkbutton(self.inten)
        self.intenState.place(
            relx=0.047,
            rely=0.444,
            relwidth=0.095,
            relheight=0.0,
            height=21,
            bordermode="ignore",
        )
        self.intenState.configure(variable=self.tch103)
        self.intenState.configure(compound="left")

        self.intenLen = ttk.Scale(self.inten, from_=0, to=255.0)
        self.intenLen.place(relx=0.158, rely=0.311, relheight=0.533, relwidth=0.526)

        self.intenLen.configure(command=beta1_support.inten_lentoval)

        self.intenVal = ttk.Entry(self.inten)
        self.intenVal.place(
            relx=0.737, rely=0.333, relheight=0.511, relwidth=0.189, bordermode="ignore"
        )
        self.intenVal.configure(font="-family {Segoe UI} -size 9")
        self.intenVal.configure(cursor="ibeam")

def start_up():
    beta1_support.main()


if __name__ == "__main__":
    beta1_support.main()
